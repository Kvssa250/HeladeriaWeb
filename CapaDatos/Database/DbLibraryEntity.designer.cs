#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Heladeria")]
	public partial class DbLibraryEntityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertSucursal(Sucursal instance);
    partial void UpdateSucursal(Sucursal instance);
    partial void DeleteSucursal(Sucursal instance);
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    partial void InsertFactura(Factura instance);
    partial void UpdateFactura(Factura instance);
    partial void DeleteFactura(Factura instance);
    partial void InsertPeso(Peso instance);
    partial void UpdatePeso(Peso instance);
    partial void DeletePeso(Peso instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertPuesto(Puesto instance);
    partial void UpdatePuesto(Puesto instance);
    partial void DeletePuesto(Puesto instance);
    #endregion
		
		public DbLibraryEntityDataContext() : 
				base(global::CapaDatos.Properties.Settings.Default.HeladeriaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Sucursal> Sucursals
		{
			get
			{
				return this.GetTable<Sucursal>();
			}
		}
		
		public System.Data.Linq.Table<Empleado> Empleados
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
		
		public System.Data.Linq.Table<Factura> Facturas
		{
			get
			{
				return this.GetTable<Factura>();
			}
		}
		
		public System.Data.Linq.Table<Peso> Pesos
		{
			get
			{
				return this.GetTable<Peso>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Productos
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<Puesto> Puestos
		{
			get
			{
				return this.GetTable<Puesto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Cliente;
		
		private string _Nombre_completo;
		
		private System.Nullable<int> _Id_Producto;
		
		private System.Nullable<int> _Id_Empleado;
		
		private System.Nullable<int> _Id_Sucursal;
		
		private System.Nullable<int> _Num_de_factura;
		
		private EntitySet<Factura> _Facturas;
		
		private EntityRef<Sucursal> _Sucursal;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<Factura> _Factura;
		
		private EntityRef<Producto> _Producto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ClienteChanging(int value);
    partial void OnId_ClienteChanged();
    partial void OnNombre_completoChanging(string value);
    partial void OnNombre_completoChanged();
    partial void OnId_ProductoChanging(System.Nullable<int> value);
    partial void OnId_ProductoChanged();
    partial void OnId_EmpleadoChanging(System.Nullable<int> value);
    partial void OnId_EmpleadoChanged();
    partial void OnId_SucursalChanging(System.Nullable<int> value);
    partial void OnId_SucursalChanged();
    partial void OnNum_de_facturaChanging(System.Nullable<int> value);
    partial void OnNum_de_facturaChanged();
    #endregion
		
		public Cliente()
		{
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			this._Sucursal = default(EntityRef<Sucursal>);
			this._Empleado = default(EntityRef<Empleado>);
			this._Factura = default(EntityRef<Factura>);
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Cliente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Cliente
		{
			get
			{
				return this._Id_Cliente;
			}
			set
			{
				if ((this._Id_Cliente != value))
				{
					this.OnId_ClienteChanging(value);
					this.SendPropertyChanging();
					this._Id_Cliente = value;
					this.SendPropertyChanged("Id_Cliente");
					this.OnId_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_completo", DbType="VarChar(60)")]
		public string Nombre_completo
		{
			get
			{
				return this._Nombre_completo;
			}
			set
			{
				if ((this._Nombre_completo != value))
				{
					this.OnNombre_completoChanging(value);
					this.SendPropertyChanging();
					this._Nombre_completo = value;
					this.SendPropertyChanged("Nombre_completo");
					this.OnNombre_completoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Producto", DbType="Int")]
		public System.Nullable<int> Id_Producto
		{
			get
			{
				return this._Id_Producto;
			}
			set
			{
				if ((this._Id_Producto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ProductoChanging(value);
					this.SendPropertyChanging();
					this._Id_Producto = value;
					this.SendPropertyChanged("Id_Producto");
					this.OnId_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Empleado", DbType="Int")]
		public System.Nullable<int> Id_Empleado
		{
			get
			{
				return this._Id_Empleado;
			}
			set
			{
				if ((this._Id_Empleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EmpleadoChanging(value);
					this.SendPropertyChanging();
					this._Id_Empleado = value;
					this.SendPropertyChanged("Id_Empleado");
					this.OnId_EmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sucursal", DbType="Int")]
		public System.Nullable<int> Id_Sucursal
		{
			get
			{
				return this._Id_Sucursal;
			}
			set
			{
				if ((this._Id_Sucursal != value))
				{
					if (this._Sucursal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SucursalChanging(value);
					this.SendPropertyChanging();
					this._Id_Sucursal = value;
					this.SendPropertyChanged("Id_Sucursal");
					this.OnId_SucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_de_factura", DbType="Int")]
		public System.Nullable<int> Num_de_factura
		{
			get
			{
				return this._Num_de_factura;
			}
			set
			{
				if ((this._Num_de_factura != value))
				{
					if (this._Factura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNum_de_facturaChanging(value);
					this.SendPropertyChanging();
					this._Num_de_factura = value;
					this.SendPropertyChanged("Num_de_factura");
					this.OnNum_de_facturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Factura", Storage="_Facturas", ThisKey="Id_Cliente", OtherKey="Id_Cliente")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_Cliente", Storage="_Sucursal", ThisKey="Id_Sucursal", OtherKey="Id_Sucursal", IsForeignKey=true)]
		public Sucursal Sucursal
		{
			get
			{
				return this._Sucursal.Entity;
			}
			set
			{
				Sucursal previousValue = this._Sucursal.Entity;
				if (((previousValue != value) 
							|| (this._Sucursal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sucursal.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Sucursal.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._Id_Sucursal = value.Id_Sucursal;
					}
					else
					{
						this._Id_Sucursal = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sucursal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Cliente", Storage="_Empleado", ThisKey="Id_Empleado", OtherKey="Id_Empleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._Id_Empleado = value.Id_Empleado;
					}
					else
					{
						this._Id_Empleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Cliente", Storage="_Factura", ThisKey="Num_de_factura", OtherKey="Num_de_factura", IsForeignKey=true)]
		public Factura Factura
		{
			get
			{
				return this._Factura.Entity;
			}
			set
			{
				Factura previousValue = this._Factura.Entity;
				if (((previousValue != value) 
							|| (this._Factura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factura.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Factura.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._Num_de_factura = value.Num_de_factura;
					}
					else
					{
						this._Num_de_factura = default(Nullable<int>);
					}
					this.SendPropertyChanged("Factura");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Cliente", Storage="_Producto", ThisKey="Id_Producto", OtherKey="Id_Producto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._Id_Producto = value.Id_Producto;
					}
					else
					{
						this._Id_Producto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sucursal")]
	public partial class Sucursal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Sucursal;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private System.Nullable<int> _Id_Empleado;
		
		private System.Nullable<int> _Id_Producto;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntitySet<Empleado> _Empleados;
		
		private EntityRef<Empleado> _Empleado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_SucursalChanging(int value);
    partial void OnId_SucursalChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnId_EmpleadoChanging(System.Nullable<int> value);
    partial void OnId_EmpleadoChanged();
    partial void OnId_ProductoChanging(System.Nullable<int> value);
    partial void OnId_ProductoChanged();
    #endregion
		
		public Sucursal()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Empleados = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleados), new Action<Empleado>(this.detach_Empleados));
			this._Empleado = default(EntityRef<Empleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sucursal", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Sucursal
		{
			get
			{
				return this._Id_Sucursal;
			}
			set
			{
				if ((this._Id_Sucursal != value))
				{
					this.OnId_SucursalChanging(value);
					this.SendPropertyChanging();
					this._Id_Sucursal = value;
					this.SendPropertyChanged("Id_Sucursal");
					this.OnId_SucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(100)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Empleado", DbType="Int")]
		public System.Nullable<int> Id_Empleado
		{
			get
			{
				return this._Id_Empleado;
			}
			set
			{
				if ((this._Id_Empleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EmpleadoChanging(value);
					this.SendPropertyChanging();
					this._Id_Empleado = value;
					this.SendPropertyChanged("Id_Empleado");
					this.OnId_EmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Producto", DbType="Int")]
		public System.Nullable<int> Id_Producto
		{
			get
			{
				return this._Id_Producto;
			}
			set
			{
				if ((this._Id_Producto != value))
				{
					this.OnId_ProductoChanging(value);
					this.SendPropertyChanging();
					this._Id_Producto = value;
					this.SendPropertyChanged("Id_Producto");
					this.OnId_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_Cliente", Storage="_Clientes", ThisKey="Id_Sucursal", OtherKey="Id_Sucursal")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_Empleado", Storage="_Empleados", ThisKey="Id_Sucursal", OtherKey="Id_Sucursal")]
		public EntitySet<Empleado> Empleados
		{
			get
			{
				return this._Empleados;
			}
			set
			{
				this._Empleados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Sucursal", Storage="_Empleado", ThisKey="Id_Empleado", OtherKey="Id_Empleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Sucursals.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Sucursals.Add(this);
						this._Id_Empleado = value.Id_Empleado;
					}
					else
					{
						this._Id_Empleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = null;
		}
		
		private void attach_Empleados(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = this;
		}
		
		private void detach_Empleados(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Empleado;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private byte _Estado;
		
		private System.Nullable<int> _Id_Puesto;
		
		private System.Nullable<int> _Id_Sucursal;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntitySet<Sucursal> _Sucursals;
		
		private EntitySet<Factura> _Facturas;
		
		private EntityRef<Sucursal> _Sucursal;
		
		private EntityRef<Puesto> _Puesto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_EmpleadoChanging(int value);
    partial void OnId_EmpleadoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnEstadoChanging(byte value);
    partial void OnEstadoChanged();
    partial void OnId_PuestoChanging(System.Nullable<int> value);
    partial void OnId_PuestoChanged();
    partial void OnId_SucursalChanging(System.Nullable<int> value);
    partial void OnId_SucursalChanged();
    #endregion
		
		public Empleado()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Sucursals = new EntitySet<Sucursal>(new Action<Sucursal>(this.attach_Sucursals), new Action<Sucursal>(this.detach_Sucursals));
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			this._Sucursal = default(EntityRef<Sucursal>);
			this._Puesto = default(EntityRef<Puesto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Empleado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Empleado
		{
			get
			{
				return this._Id_Empleado;
			}
			set
			{
				if ((this._Id_Empleado != value))
				{
					this.OnId_EmpleadoChanging(value);
					this.SendPropertyChanging();
					this._Id_Empleado = value;
					this.SendPropertyChanged("Id_Empleado");
					this.OnId_EmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(30)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="TinyInt NOT NULL")]
		public byte Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Puesto", DbType="Int")]
		public System.Nullable<int> Id_Puesto
		{
			get
			{
				return this._Id_Puesto;
			}
			set
			{
				if ((this._Id_Puesto != value))
				{
					if (this._Puesto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PuestoChanging(value);
					this.SendPropertyChanging();
					this._Id_Puesto = value;
					this.SendPropertyChanged("Id_Puesto");
					this.OnId_PuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sucursal", DbType="Int")]
		public System.Nullable<int> Id_Sucursal
		{
			get
			{
				return this._Id_Sucursal;
			}
			set
			{
				if ((this._Id_Sucursal != value))
				{
					if (this._Sucursal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SucursalChanging(value);
					this.SendPropertyChanging();
					this._Id_Sucursal = value;
					this.SendPropertyChanged("Id_Sucursal");
					this.OnId_SucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Cliente", Storage="_Clientes", ThisKey="Id_Empleado", OtherKey="Id_Empleado")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Sucursal", Storage="_Sucursals", ThisKey="Id_Empleado", OtherKey="Id_Empleado")]
		public EntitySet<Sucursal> Sucursals
		{
			get
			{
				return this._Sucursals;
			}
			set
			{
				this._Sucursals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Factura", Storage="_Facturas", ThisKey="Id_Empleado", OtherKey="Id_Empleado")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_Empleado", Storage="_Sucursal", ThisKey="Id_Sucursal", OtherKey="Id_Sucursal", IsForeignKey=true)]
		public Sucursal Sucursal
		{
			get
			{
				return this._Sucursal.Entity;
			}
			set
			{
				Sucursal previousValue = this._Sucursal.Entity;
				if (((previousValue != value) 
							|| (this._Sucursal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sucursal.Entity = null;
						previousValue.Empleados.Remove(this);
					}
					this._Sucursal.Entity = value;
					if ((value != null))
					{
						value.Empleados.Add(this);
						this._Id_Sucursal = value.Id_Sucursal;
					}
					else
					{
						this._Id_Sucursal = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sucursal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Puesto_Empleado", Storage="_Puesto", ThisKey="Id_Puesto", OtherKey="Id_Puesto", IsForeignKey=true)]
		public Puesto Puesto
		{
			get
			{
				return this._Puesto.Entity;
			}
			set
			{
				Puesto previousValue = this._Puesto.Entity;
				if (((previousValue != value) 
							|| (this._Puesto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Puesto.Entity = null;
						previousValue.Empleados.Remove(this);
					}
					this._Puesto.Entity = value;
					if ((value != null))
					{
						value.Empleados.Add(this);
						this._Id_Puesto = value.Id_Puesto;
					}
					else
					{
						this._Id_Puesto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Puesto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
		
		private void attach_Sucursals(Sucursal entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Sucursals(Sucursal entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factura")]
	public partial class Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Num_de_factura;
		
		private string _Nombre_cliente;
		
		private string _Apellido_cliente;
		
		private string _Nombre_empleado;
		
		private string _Apellido_empleado;
		
		private string _Fecha;
		
		private System.Nullable<int> _Id_Empleado;
		
		private System.Nullable<int> _Id_Cliente;
		
		private System.Nullable<int> _Id_Producto;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Producto> _Producto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNum_de_facturaChanging(int value);
    partial void OnNum_de_facturaChanged();
    partial void OnNombre_clienteChanging(string value);
    partial void OnNombre_clienteChanged();
    partial void OnApellido_clienteChanging(string value);
    partial void OnApellido_clienteChanged();
    partial void OnNombre_empleadoChanging(string value);
    partial void OnNombre_empleadoChanged();
    partial void OnApellido_empleadoChanging(string value);
    partial void OnApellido_empleadoChanged();
    partial void OnFechaChanging(string value);
    partial void OnFechaChanged();
    partial void OnId_EmpleadoChanging(System.Nullable<int> value);
    partial void OnId_EmpleadoChanged();
    partial void OnId_ClienteChanging(System.Nullable<int> value);
    partial void OnId_ClienteChanged();
    partial void OnId_ProductoChanging(System.Nullable<int> value);
    partial void OnId_ProductoChanged();
    #endregion
		
		public Factura()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Empleado = default(EntityRef<Empleado>);
			this._Cliente = default(EntityRef<Cliente>);
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_de_factura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Num_de_factura
		{
			get
			{
				return this._Num_de_factura;
			}
			set
			{
				if ((this._Num_de_factura != value))
				{
					this.OnNum_de_facturaChanging(value);
					this.SendPropertyChanging();
					this._Num_de_factura = value;
					this.SendPropertyChanged("Num_de_factura");
					this.OnNum_de_facturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_cliente", DbType="VarChar(30)")]
		public string Nombre_cliente
		{
			get
			{
				return this._Nombre_cliente;
			}
			set
			{
				if ((this._Nombre_cliente != value))
				{
					this.OnNombre_clienteChanging(value);
					this.SendPropertyChanging();
					this._Nombre_cliente = value;
					this.SendPropertyChanged("Nombre_cliente");
					this.OnNombre_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido_cliente", DbType="VarChar(30)")]
		public string Apellido_cliente
		{
			get
			{
				return this._Apellido_cliente;
			}
			set
			{
				if ((this._Apellido_cliente != value))
				{
					this.OnApellido_clienteChanging(value);
					this.SendPropertyChanging();
					this._Apellido_cliente = value;
					this.SendPropertyChanged("Apellido_cliente");
					this.OnApellido_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_empleado", DbType="VarChar(30)")]
		public string Nombre_empleado
		{
			get
			{
				return this._Nombre_empleado;
			}
			set
			{
				if ((this._Nombre_empleado != value))
				{
					this.OnNombre_empleadoChanging(value);
					this.SendPropertyChanging();
					this._Nombre_empleado = value;
					this.SendPropertyChanged("Nombre_empleado");
					this.OnNombre_empleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido_empleado", DbType="VarChar(30)")]
		public string Apellido_empleado
		{
			get
			{
				return this._Apellido_empleado;
			}
			set
			{
				if ((this._Apellido_empleado != value))
				{
					this.OnApellido_empleadoChanging(value);
					this.SendPropertyChanging();
					this._Apellido_empleado = value;
					this.SendPropertyChanged("Apellido_empleado");
					this.OnApellido_empleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="VarChar(11)")]
		public string Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Empleado", DbType="Int")]
		public System.Nullable<int> Id_Empleado
		{
			get
			{
				return this._Id_Empleado;
			}
			set
			{
				if ((this._Id_Empleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EmpleadoChanging(value);
					this.SendPropertyChanging();
					this._Id_Empleado = value;
					this.SendPropertyChanged("Id_Empleado");
					this.OnId_EmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Cliente", DbType="Int")]
		public System.Nullable<int> Id_Cliente
		{
			get
			{
				return this._Id_Cliente;
			}
			set
			{
				if ((this._Id_Cliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ClienteChanging(value);
					this.SendPropertyChanging();
					this._Id_Cliente = value;
					this.SendPropertyChanged("Id_Cliente");
					this.OnId_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Producto", DbType="Int")]
		public System.Nullable<int> Id_Producto
		{
			get
			{
				return this._Id_Producto;
			}
			set
			{
				if ((this._Id_Producto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ProductoChanging(value);
					this.SendPropertyChanging();
					this._Id_Producto = value;
					this.SendPropertyChanged("Id_Producto");
					this.OnId_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Cliente", Storage="_Clientes", ThisKey="Num_de_factura", OtherKey="Num_de_factura")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Factura", Storage="_Empleado", ThisKey="Id_Empleado", OtherKey="Id_Empleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._Id_Empleado = value.Id_Empleado;
					}
					else
					{
						this._Id_Empleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Factura", Storage="_Cliente", ThisKey="Id_Cliente", OtherKey="Id_Cliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._Id_Cliente = value.Id_Cliente;
					}
					else
					{
						this._Id_Cliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Factura", Storage="_Producto", ThisKey="Id_Producto", OtherKey="Id_Producto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._Id_Producto = value.Id_Producto;
					}
					else
					{
						this._Id_Producto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Factura = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Factura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Peso")]
	public partial class Peso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Envase;
		
		private System.Nullable<int> _Capacidad_envase;
		
		private System.Nullable<int> _Peso_real;
		
		private EntitySet<Producto> _Productos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_EnvaseChanging(int value);
    partial void OnId_EnvaseChanged();
    partial void OnCapacidad_envaseChanging(System.Nullable<int> value);
    partial void OnCapacidad_envaseChanged();
    partial void OnPeso_realChanging(System.Nullable<int> value);
    partial void OnPeso_realChanged();
    #endregion
		
		public Peso()
		{
			this._Productos = new EntitySet<Producto>(new Action<Producto>(this.attach_Productos), new Action<Producto>(this.detach_Productos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Envase", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Envase
		{
			get
			{
				return this._Id_Envase;
			}
			set
			{
				if ((this._Id_Envase != value))
				{
					this.OnId_EnvaseChanging(value);
					this.SendPropertyChanging();
					this._Id_Envase = value;
					this.SendPropertyChanged("Id_Envase");
					this.OnId_EnvaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacidad_envase", DbType="Int")]
		public System.Nullable<int> Capacidad_envase
		{
			get
			{
				return this._Capacidad_envase;
			}
			set
			{
				if ((this._Capacidad_envase != value))
				{
					this.OnCapacidad_envaseChanging(value);
					this.SendPropertyChanging();
					this._Capacidad_envase = value;
					this.SendPropertyChanged("Capacidad_envase");
					this.OnCapacidad_envaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peso_real", DbType="Int")]
		public System.Nullable<int> Peso_real
		{
			get
			{
				return this._Peso_real;
			}
			set
			{
				if ((this._Peso_real != value))
				{
					this.OnPeso_realChanging(value);
					this.SendPropertyChanging();
					this._Peso_real = value;
					this.SendPropertyChanged("Peso_real");
					this.OnPeso_realChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Peso_Producto", Storage="_Productos", ThisKey="Id_Envase", OtherKey="Id_Envase")]
		public EntitySet<Producto> Productos
		{
			get
			{
				return this._Productos;
			}
			set
			{
				this._Productos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Productos(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Peso = this;
		}
		
		private void detach_Productos(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Peso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Producto;
		
		private string _Desc_producto;
		
		private System.Nullable<int> _Precio_producto;
		
		private System.Nullable<int> _Id_Envase;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntitySet<Factura> _Facturas;
		
		private EntityRef<Peso> _Peso;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ProductoChanging(int value);
    partial void OnId_ProductoChanged();
    partial void OnDesc_productoChanging(string value);
    partial void OnDesc_productoChanged();
    partial void OnPrecio_productoChanging(System.Nullable<int> value);
    partial void OnPrecio_productoChanged();
    partial void OnId_EnvaseChanging(System.Nullable<int> value);
    partial void OnId_EnvaseChanged();
    #endregion
		
		public Producto()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			this._Peso = default(EntityRef<Peso>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Producto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Producto
		{
			get
			{
				return this._Id_Producto;
			}
			set
			{
				if ((this._Id_Producto != value))
				{
					this.OnId_ProductoChanging(value);
					this.SendPropertyChanging();
					this._Id_Producto = value;
					this.SendPropertyChanged("Id_Producto");
					this.OnId_ProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc_producto", DbType="VarChar(255)")]
		public string Desc_producto
		{
			get
			{
				return this._Desc_producto;
			}
			set
			{
				if ((this._Desc_producto != value))
				{
					this.OnDesc_productoChanging(value);
					this.SendPropertyChanging();
					this._Desc_producto = value;
					this.SendPropertyChanged("Desc_producto");
					this.OnDesc_productoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio_producto", DbType="Int")]
		public System.Nullable<int> Precio_producto
		{
			get
			{
				return this._Precio_producto;
			}
			set
			{
				if ((this._Precio_producto != value))
				{
					this.OnPrecio_productoChanging(value);
					this.SendPropertyChanging();
					this._Precio_producto = value;
					this.SendPropertyChanged("Precio_producto");
					this.OnPrecio_productoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Envase", DbType="Int")]
		public System.Nullable<int> Id_Envase
		{
			get
			{
				return this._Id_Envase;
			}
			set
			{
				if ((this._Id_Envase != value))
				{
					if (this._Peso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EnvaseChanging(value);
					this.SendPropertyChanging();
					this._Id_Envase = value;
					this.SendPropertyChanged("Id_Envase");
					this.OnId_EnvaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Cliente", Storage="_Clientes", ThisKey="Id_Producto", OtherKey="Id_Producto")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Factura", Storage="_Facturas", ThisKey="Id_Producto", OtherKey="Id_Producto")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Peso_Producto", Storage="_Peso", ThisKey="Id_Envase", OtherKey="Id_Envase", IsForeignKey=true)]
		public Peso Peso
		{
			get
			{
				return this._Peso.Entity;
			}
			set
			{
				Peso previousValue = this._Peso.Entity;
				if (((previousValue != value) 
							|| (this._Peso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Peso.Entity = null;
						previousValue.Productos.Remove(this);
					}
					this._Peso.Entity = value;
					if ((value != null))
					{
						value.Productos.Add(this);
						this._Id_Envase = value.Id_Envase;
					}
					else
					{
						this._Id_Envase = default(Nullable<int>);
					}
					this.SendPropertyChanged("Peso");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Puesto")]
	public partial class Puesto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Puesto;
		
		private string _Nombre_de_puesto;
		
		private EntitySet<Empleado> _Empleados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PuestoChanging(int value);
    partial void OnId_PuestoChanged();
    partial void OnNombre_de_puestoChanging(string value);
    partial void OnNombre_de_puestoChanged();
    #endregion
		
		public Puesto()
		{
			this._Empleados = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleados), new Action<Empleado>(this.detach_Empleados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Puesto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Puesto
		{
			get
			{
				return this._Id_Puesto;
			}
			set
			{
				if ((this._Id_Puesto != value))
				{
					this.OnId_PuestoChanging(value);
					this.SendPropertyChanging();
					this._Id_Puesto = value;
					this.SendPropertyChanged("Id_Puesto");
					this.OnId_PuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_de_puesto", DbType="VarChar(50)")]
		public string Nombre_de_puesto
		{
			get
			{
				return this._Nombre_de_puesto;
			}
			set
			{
				if ((this._Nombre_de_puesto != value))
				{
					this.OnNombre_de_puestoChanging(value);
					this.SendPropertyChanging();
					this._Nombre_de_puesto = value;
					this.SendPropertyChanged("Nombre_de_puesto");
					this.OnNombre_de_puestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Puesto_Empleado", Storage="_Empleados", ThisKey="Id_Puesto", OtherKey="Id_Puesto")]
		public EntitySet<Empleado> Empleados
		{
			get
			{
				return this._Empleados;
			}
			set
			{
				this._Empleados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleados(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Puesto = this;
		}
		
		private void detach_Empleados(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Puesto = null;
		}
	}
}
#pragma warning restore 1591
